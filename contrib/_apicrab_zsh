#compdef apicrab

autoload -U is-at-least


_apicrab() {
	FLOWS=()
    while read -r line; do FLOWS+=("$line"); done < <(sqlite3 ~/.config/qapi/qapi.sqlite 'select name || ":" || coalesce((select json_extract(f.run_action_args, "$.name") || " -> " || (select group_concat(x.value, " -> ") from json_each(j.value) x) from json_each(f.run_action_args) j where j.key = "chain"), "") from flows as f')

	ACTIONS=()
	while read -r line; do ACTIONS+=("$line"); done < <(sqlite3 ~/.config/qapi/qapi.sqlite 'select name || ":" || url from actions')

	PROJECTS=()
	while read -r line; do PROJECTS+=("$line"); done < <(sqlite3 ~/.config/qapi/qapi.sqlite 'select p.name || ":" || "test-url: " || p.test_url || coalesce((select " var: " || group_concat(v.key) from (select j.key as key from json_each(p.conf) j) as v), "") from projects as p')

typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_apicrab_commands" \
"*::: :->apicrab" \
&& ret=0
    case $state in
    (apicrab)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-command-$line[1]:"
        case $line[1] in
            (project)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_apicrab__project_commands" \
"*::: :->project" \
&& ret=0

    case $state in
    (project)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-project-command-$line[1]:"
        case $line[1] in
            (new)
_arguments "${_arguments_options[@]}" \
'-t+[test url for this project]:TEST_URL: ' \
'--test-url=[test url for this project]:TEST_URL: ' \
'-p+[prod url for this project]:PROD_URL: ' \
'--prod-url=[prod url for this project]:PROD_URL: ' \
'*-c+[Possible configuration for this project]:CONF: ' \
'*--conf=[Possible configuration for this project]:CONF: ' \
'--from-openapi=[url or path to openapi file]:FROM_OPENAPI:_files' \
'--from-postman=[url or path to postman collection file]:FROM_POSTMAN:_files' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':name -- project name unique:' \
&& ret=0
;;
(add-action)
_arguments "${_arguments_options[@]}" \
'-n+[name of the action]:NAME: ' \
'--name=[name of the action]:NAME: ' \
'-u+[url of the action]:URL: ' \
'--url=[url of the action]:URL: ' \
'-v+[verb of the action]:VERB:(GET POST PUT DELETE)' \
'--verb=[verb of the action]:VERB:(GET POST PUT DELETE)' \
'-s+[maybe a static body]:STATIC_BODY: ' \
'--static-body=[maybe a static body]:STATIC_BODY: ' \
'*--header=[]:HEADER: ' \
'-f[]' \
'--form[]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':project_name -- project name:(($PROJECTS))' \
&& ret=0
;;
(rm-action)
_arguments "${_arguments_options[@]}" \
'-n+[name of the action to remove]:NAME: ' \
'--name=[name of the action to remove]:NAME: ' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(info)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':name -- Project name:(($PROJECTS))' \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(ui)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_apicrab__project__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-project-help-command-$line[1]:"
        case $line[1] in
            (new)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(add-action)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(rm-action)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(info)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(ui)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(run)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_apicrab__run_commands" \
"*::: :->run" \
&& ret=0

    case $state in
    (run)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-run-command-$line[1]:"
        case $line[1] in
            (action)
_arguments "${_arguments_options[@]}" \
'*-p+[path params separated by a ,]:PATH_PARAMS: ' \
'*--path-params=[path params separated by a ,]:PATH_PARAMS: ' \
'*-q+[query params separated by a ,]:QUERY_PARAMS: ' \
'*--query-params=[query params separated by a ,]:QUERY_PARAMS: ' \
'*-b+[body of the action]:BODY: ' \
'*--body=[body of the action]:BODY: ' \
'*-e+[extract path of the response]:EXTRACT_PATH: ' \
'*--extract-path=[extract path of the response]:EXTRACT_PATH: ' \
'*-c+[chain with another action]:CHAIN: ' \
'*--chain=[chain with another action]:CHAIN: ' \
'--save-as=[save command line as flow]:SAVE_AS: ' \
'--clipboard[save result in the clipboard]' \
'--force[force action rerun even if its extracted value exists in current context]' \
'--no-print[print the output of the command]' \
'--grep[grep the output of the command]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':name -- action name:(($ACTIONS))' \
&& ret=0
;;
(flow)
	#compadd -X 'my awesome description' -U - "$ACTIONS[@]"
	_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':name -- Flow name to be ran:(($FLOWS))' \
&& ret=0
;;
(test-suite)
_arguments "${_arguments_options[@]}" \
'-d[Debug output]' \
'--debug[Debug output]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':name -- Test suite name:(fhir-epic\s-q\sname:str get_lifen_test\s-q\sname:str)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_apicrab__run__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-run-help-command-$line[1]:"
        case $line[1] in
            (action)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(flow)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(test-suite)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(flow)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_apicrab__flow_commands" \
"*::: :->flow" \
&& ret=0

    case $state in
    (flow)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-flow-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_apicrab__flow__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-flow-help-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(test-suite)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_apicrab__test-suite_commands" \
"*::: :->test-suite" \
&& ret=0

    case $state in
    (test-suite)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-test-suite-command-$line[1]:"
        case $line[1] in
            (new)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':name -- Test suite name:' \
&& ret=0
;;
(add-test-suite)
_arguments "${_arguments_options[@]}" \
'-f+[Flow name to add to the test suite]:FLOW_NAME: ' \
'--flow-name=[Flow name to add to the test suite]:FLOW_NAME: ' \
'*-e+[expect associated to the test]:EXPECT: ' \
'*--expect=[expect associated to the test]:EXPECT: ' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':name -- Test suite name:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_apicrab__test-suite__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-test-suite-help-command-$line[1]:"
        case $line[1] in
            (new)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(add-test-suite)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(history)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_apicrab__history_commands" \
"*::: :->history" \
&& ret=0

    case $state in
    (history)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-history-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(ui)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_apicrab__history__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-history-help-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(ui)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(complete)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':shell:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(print-complete-script)
_arguments "${_arguments_options[@]}" \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
':shell:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_apicrab__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-help-command-$line[1]:"
        case $line[1] in
            (project)
_arguments "${_arguments_options[@]}" \
":: :_apicrab__help__project_commands" \
"*::: :->project" \
&& ret=0

    case $state in
    (project)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-help-project-command-$line[1]:"
        case $line[1] in
            (new)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(add-action)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(rm-action)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(info)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(ui)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(run)
_arguments "${_arguments_options[@]}" \
":: :_apicrab__help__run_commands" \
"*::: :->run" \
&& ret=0

    case $state in
    (run)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-help-run-command-$line[1]:"
        case $line[1] in
            (action)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(flow)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(test-suite)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(flow)
_arguments "${_arguments_options[@]}" \
":: :_apicrab__help__flow_commands" \
"*::: :->flow" \
&& ret=0

    case $state in
    (flow)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-help-flow-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(test-suite)
_arguments "${_arguments_options[@]}" \
":: :_apicrab__help__test-suite_commands" \
"*::: :->test-suite" \
&& ret=0

    case $state in
    (test-suite)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-help-test-suite-command-$line[1]:"
        case $line[1] in
            (new)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(add-test-suite)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(history)
_arguments "${_arguments_options[@]}" \
":: :_apicrab__help__history_commands" \
"*::: :->history" \
&& ret=0

    case $state in
    (history)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:apicrab-help-history-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(ui)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(complete)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(print-complete-script)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_apicrab_commands] )) ||
_apicrab_commands() {
    local commands; commands=(
'project:Create or update a new project with specified parameters' \
'run:Run a project action, flow or test suite' \
'flow:Get information about existing flows' \
'test-suite:Test suite information' \
'history:List all history call' \
'complete:Reload completion script (only for oh-my-zsh)' \
'print-complete-script:Print the completion script in stdout' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'apicrab commands' commands "$@"
}
(( $+functions[_apicrab__help__run__action_commands] )) ||
_apicrab__help__run__action_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help run action commands' commands "$@"
}
(( $+functions[_apicrab__run__action_commands] )) ||
_apicrab__run__action_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab run action commands' commands "$@"
}
(( $+functions[_apicrab__run__help__action_commands] )) ||
_apicrab__run__help__action_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab run help action commands' commands "$@"
}
(( $+functions[_apicrab__help__project__add-action_commands] )) ||
_apicrab__help__project__add-action_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help project add-action commands' commands "$@"
}
(( $+functions[_apicrab__project__add-action_commands] )) ||
_apicrab__project__add-action_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab project add-action commands' commands "$@"
}
(( $+functions[_apicrab__project__help__add-action_commands] )) ||
_apicrab__project__help__add-action_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab project help add-action commands' commands "$@"
}
(( $+functions[_apicrab__help__test-suite__add-test-suite_commands] )) ||
_apicrab__help__test-suite__add-test-suite_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help test-suite add-test-suite commands' commands "$@"
}
(( $+functions[_apicrab__test-suite__add-test-suite_commands] )) ||
_apicrab__test-suite__add-test-suite_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab test-suite add-test-suite commands' commands "$@"
}
(( $+functions[_apicrab__test-suite__help__add-test-suite_commands] )) ||
_apicrab__test-suite__help__add-test-suite_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab test-suite help add-test-suite commands' commands "$@"
}
(( $+functions[_apicrab__complete_commands] )) ||
_apicrab__complete_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab complete commands' commands "$@"
}
(( $+functions[_apicrab__help__complete_commands] )) ||
_apicrab__help__complete_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help complete commands' commands "$@"
}
(( $+functions[_apicrab__flow_commands] )) ||
_apicrab__flow_commands() {
    local commands; commands=(
'list:Run an action' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'apicrab flow commands' commands "$@"
}
(( $+functions[_apicrab__help__flow_commands] )) ||
_apicrab__help__flow_commands() {
    local commands; commands=(
'list:Run an action' \
    )
    _describe -t commands 'apicrab help flow commands' commands "$@"
}
(( $+functions[_apicrab__help__run__flow_commands] )) ||
_apicrab__help__run__flow_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help run flow commands' commands "$@"
}
(( $+functions[_apicrab__run__flow_commands] )) ||
_apicrab__run__flow_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab run flow commands' commands "$@"
}
(( $+functions[_apicrab__run__help__flow_commands] )) ||
_apicrab__run__help__flow_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab run help flow commands' commands "$@"
}
(( $+functions[_apicrab__flow__help_commands] )) ||
_apicrab__flow__help_commands() {
    local commands; commands=(
'list:Run an action' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'apicrab flow help commands' commands "$@"
}
(( $+functions[_apicrab__flow__help__help_commands] )) ||
_apicrab__flow__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab flow help help commands' commands "$@"
}
(( $+functions[_apicrab__help_commands] )) ||
_apicrab__help_commands() {
    local commands; commands=(
'project:Create or update a new project with specified parameters' \
'run:Run a project action, flow or test suite' \
'flow:Get information about existing flows' \
'test-suite:Test suite information' \
'history:List all history call' \
'complete:Reload completion script (only for oh-my-zsh)' \
'print-complete-script:Print the completion script in stdout' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'apicrab help commands' commands "$@"
}
(( $+functions[_apicrab__help__help_commands] )) ||
_apicrab__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help help commands' commands "$@"
}
(( $+functions[_apicrab__history__help_commands] )) ||
_apicrab__history__help_commands() {
    local commands; commands=(
'list:Show history' \
'ui:Run history ui' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'apicrab history help commands' commands "$@"
}
(( $+functions[_apicrab__history__help__help_commands] )) ||
_apicrab__history__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab history help help commands' commands "$@"
}
(( $+functions[_apicrab__project__help_commands] )) ||
_apicrab__project__help_commands() {
    local commands; commands=(
'new:Create a new project' \
'add-action:Add action to the specified project' \
'rm-action:Remove action from the specified project' \
'info:Get information about a project' \
'list:List projects' \
'ui:Run project ui' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'apicrab project help commands' commands "$@"
}
(( $+functions[_apicrab__project__help__help_commands] )) ||
_apicrab__project__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab project help help commands' commands "$@"
}
(( $+functions[_apicrab__run__help_commands] )) ||
_apicrab__run__help_commands() {
    local commands; commands=(
'action:Run an action' \
'flow:Run a saved flow' \
'test-suite:Run a saved test suite' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'apicrab run help commands' commands "$@"
}
(( $+functions[_apicrab__run__help__help_commands] )) ||
_apicrab__run__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab run help help commands' commands "$@"
}
(( $+functions[_apicrab__test-suite__help_commands] )) ||
_apicrab__test-suite__help_commands() {
    local commands; commands=(
'new:Run an action' \
'add-test-suite:' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'apicrab test-suite help commands' commands "$@"
}
(( $+functions[_apicrab__test-suite__help__help_commands] )) ||
_apicrab__test-suite__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab test-suite help help commands' commands "$@"
}
(( $+functions[_apicrab__help__history_commands] )) ||
_apicrab__help__history_commands() {
    local commands; commands=(
'list:Show history' \
'ui:Run history ui' \
    )
    _describe -t commands 'apicrab help history commands' commands "$@"
}
(( $+functions[_apicrab__history_commands] )) ||
_apicrab__history_commands() {
    local commands; commands=(
'list:Show history' \
'ui:Run history ui' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'apicrab history commands' commands "$@"
}
(( $+functions[_apicrab__help__project__info_commands] )) ||
_apicrab__help__project__info_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help project info commands' commands "$@"
}
(( $+functions[_apicrab__project__help__info_commands] )) ||
_apicrab__project__help__info_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab project help info commands' commands "$@"
}
(( $+functions[_apicrab__project__info_commands] )) ||
_apicrab__project__info_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab project info commands' commands "$@"
}
(( $+functions[_apicrab__flow__help__list_commands] )) ||
_apicrab__flow__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab flow help list commands' commands "$@"
}
(( $+functions[_apicrab__flow__list_commands] )) ||
_apicrab__flow__list_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab flow list commands' commands "$@"
}
(( $+functions[_apicrab__help__flow__list_commands] )) ||
_apicrab__help__flow__list_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help flow list commands' commands "$@"
}
(( $+functions[_apicrab__help__history__list_commands] )) ||
_apicrab__help__history__list_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help history list commands' commands "$@"
}
(( $+functions[_apicrab__help__project__list_commands] )) ||
_apicrab__help__project__list_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help project list commands' commands "$@"
}
(( $+functions[_apicrab__history__help__list_commands] )) ||
_apicrab__history__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab history help list commands' commands "$@"
}
(( $+functions[_apicrab__history__list_commands] )) ||
_apicrab__history__list_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab history list commands' commands "$@"
}
(( $+functions[_apicrab__project__help__list_commands] )) ||
_apicrab__project__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab project help list commands' commands "$@"
}
(( $+functions[_apicrab__project__list_commands] )) ||
_apicrab__project__list_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab project list commands' commands "$@"
}
(( $+functions[_apicrab__help__project__new_commands] )) ||
_apicrab__help__project__new_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help project new commands' commands "$@"
}
(( $+functions[_apicrab__help__test-suite__new_commands] )) ||
_apicrab__help__test-suite__new_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help test-suite new commands' commands "$@"
}
(( $+functions[_apicrab__project__help__new_commands] )) ||
_apicrab__project__help__new_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab project help new commands' commands "$@"
}
(( $+functions[_apicrab__project__new_commands] )) ||
_apicrab__project__new_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab project new commands' commands "$@"
}
(( $+functions[_apicrab__test-suite__help__new_commands] )) ||
_apicrab__test-suite__help__new_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab test-suite help new commands' commands "$@"
}
(( $+functions[_apicrab__test-suite__new_commands] )) ||
_apicrab__test-suite__new_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab test-suite new commands' commands "$@"
}
(( $+functions[_apicrab__help__print-complete-script_commands] )) ||
_apicrab__help__print-complete-script_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help print-complete-script commands' commands "$@"
}
(( $+functions[_apicrab__print-complete-script_commands] )) ||
_apicrab__print-complete-script_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab print-complete-script commands' commands "$@"
}
(( $+functions[_apicrab__help__project_commands] )) ||
_apicrab__help__project_commands() {
    local commands; commands=(
'new:Create a new project' \
'add-action:Add action to the specified project' \
'rm-action:Remove action from the specified project' \
'info:Get information about a project' \
'list:List projects' \
'ui:Run project ui' \
    )
    _describe -t commands 'apicrab help project commands' commands "$@"
}
(( $+functions[_apicrab__project_commands] )) ||
_apicrab__project_commands() {
    local commands; commands=(
'new:Create a new project' \
'add-action:Add action to the specified project' \
'rm-action:Remove action from the specified project' \
'info:Get information about a project' \
'list:List projects' \
'ui:Run project ui' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'apicrab project commands' commands "$@"
}
(( $+functions[_apicrab__help__project__rm-action_commands] )) ||
_apicrab__help__project__rm-action_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help project rm-action commands' commands "$@"
}
(( $+functions[_apicrab__project__help__rm-action_commands] )) ||
_apicrab__project__help__rm-action_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab project help rm-action commands' commands "$@"
}
(( $+functions[_apicrab__project__rm-action_commands] )) ||
_apicrab__project__rm-action_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab project rm-action commands' commands "$@"
}
(( $+functions[_apicrab__help__run_commands] )) ||
_apicrab__help__run_commands() {
    local commands; commands=(
'action:Run an action' \
'flow:Run a saved flow' \
'test-suite:Run a saved test suite' \
    )
    _describe -t commands 'apicrab help run commands' commands "$@"
}
(( $+functions[_apicrab__run_commands] )) ||
_apicrab__run_commands() {
    local commands; commands=(
'action:Run an action' \
'flow:Run a saved flow' \
'test-suite:Run a saved test suite' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'apicrab run commands' commands "$@"
}
(( $+functions[_apicrab__help__run__test-suite_commands] )) ||
_apicrab__help__run__test-suite_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help run test-suite commands' commands "$@"
}
(( $+functions[_apicrab__help__test-suite_commands] )) ||
_apicrab__help__test-suite_commands() {
    local commands; commands=(
'new:Run an action' \
'add-test-suite:' \
    )
    _describe -t commands 'apicrab help test-suite commands' commands "$@"
}
(( $+functions[_apicrab__run__help__test-suite_commands] )) ||
_apicrab__run__help__test-suite_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab run help test-suite commands' commands "$@"
}
(( $+functions[_apicrab__run__test-suite_commands] )) ||
_apicrab__run__test-suite_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab run test-suite commands' commands "$@"
}
(( $+functions[_apicrab__test-suite_commands] )) ||
_apicrab__test-suite_commands() {
    local commands; commands=(
'new:Run an action' \
'add-test-suite:' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'apicrab test-suite commands' commands "$@"
}
(( $+functions[_apicrab__help__history__ui_commands] )) ||
_apicrab__help__history__ui_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help history ui commands' commands "$@"
}
(( $+functions[_apicrab__help__project__ui_commands] )) ||
_apicrab__help__project__ui_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab help project ui commands' commands "$@"
}
(( $+functions[_apicrab__history__help__ui_commands] )) ||
_apicrab__history__help__ui_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab history help ui commands' commands "$@"
}
(( $+functions[_apicrab__history__ui_commands] )) ||
_apicrab__history__ui_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab history ui commands' commands "$@"
}
(( $+functions[_apicrab__project__help__ui_commands] )) ||
_apicrab__project__help__ui_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab project help ui commands' commands "$@"
}
(( $+functions[_apicrab__project__ui_commands] )) ||
_apicrab__project__ui_commands() {
    local commands; commands=()
    _describe -t commands 'apicrab project ui commands' commands "$@"
}

if [ "$funcstack[1]" = "_apicrab" ]; then
    _apicrab "$@"
else
    compdef _apicrab apicrab
fi
